"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8429],{5319:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var r=s(4848),i=s(8453);const t={},o="Versioning and Release Strategy",l={id:"development/versioning",title:"Versioning and Release Strategy",description:"We will be using Semantic Versioning for versioning our project. Semantic Versioning is a simple set of rules and requirements that dictate how version numbers are assigned and incremented.",source:"@site/docs/development/03-versioning.md",sourceDirName:"development",slug:"/development/versioning",permalink:"/ramla-docs/docs/development/versioning",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"developmentSidebar",previous:{title:"Git Strategy",permalink:"/ramla-docs/docs/development/git"},next:{title:"Code StyleGuide",permalink:"/ramla-docs/docs/development/code-styleguide"}},a={},d=[{value:"Versioning Scheme",id:"versioning-scheme",level:2},{value:"Versioning and Release Workflow",id:"versioning-and-release-workflow",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"versioning-and-release-strategy",children:"Versioning and Release Strategy"}),"\n",(0,r.jsxs)(n.p,{children:["We will be using ",(0,r.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"})," for versioning our project. Semantic Versioning is a simple set of rules and requirements that dictate how version numbers are assigned and incremented."]}),"\n",(0,r.jsx)(n.h2,{id:"versioning-scheme",children:"Versioning Scheme"}),"\n",(0,r.jsxs)(n.p,{children:["The version number is composed of three parts: ",(0,r.jsx)(n.code,{children:"MAJOR.MINOR.PATCH"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MAJOR"}),": Incremented when you make incompatible API changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MINOR"}),": Incremented when you add functionality in a backwards-compatible manner."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PATCH"}),": Incremented when you make backwards-compatible bug fixes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-release"}),": A pre-release version is denoted by appending a hyphen and a series of dot-separated identifiers immediately following the patch version."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build metadata"}),": Build metadata is denoted by appending a plus sign and a series of dot-separated identifiers immediately following the patch or pre-release version."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),": ",(0,r.jsx)(n.code,{children:"1.0.0"}),", ",(0,r.jsx)(n.code,{children:"2.3.1"}),", ",(0,r.jsx)(n.code,{children:"1.0.0-alpha.1"}),", ",(0,r.jsx)(n.code,{children:"1.0.0+20130313144700"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Versioning Example"}),": ",(0,r.jsx)(n.code,{children:"MAJOR.MINOR.PATCH"})," (e.g., ",(0,r.jsx)(n.code,{children:"1.0.0"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-release Example"}),": ",(0,r.jsx)(n.code,{children:"MAJOR.MINOR.PATCH-rc.1"})," (e.g., ",(0,r.jsx)(n.code,{children:"1.0.0-rc.1"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"versioning-and-release-workflow",children:"Versioning and Release Workflow"}),"\n",(0,r.jsx)(n.p,{children:"The versioning and release workflow consists of the following steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create a Release Branch"}),": Create a release branch from the ",(0,r.jsx)(n.code,{children:"develop"})," branch with the version number (e.g., ",(0,r.jsx)(n.code,{children:"release/1.0.0"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update the Version Number"}),": Update the version number in the project configuration files (e.g., ",(0,r.jsx)(n.code,{children:"package.json"}),", ",(0,r.jsx)(n.code,{children:"pom.xml"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update the Changelog"}),": Update the changelog with the new features, bug fixes, and changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create a Pull Request"}),": Create a pull request from the release branch to the ",(0,r.jsx)(n.code,{children:"master"})," branch."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Review and Merge"}),": Review the changes, ensure that the version number is correct, and merge the pull request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tag the Release"}),": Tag the release with the version number (e.g., ",(0,r.jsx)(n.code,{children:"v1.0.0"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Publish the Release"}),": Publish the release to the package registry or distribution platform."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Merge Back to Develop"}),": Merge the release branch back into the ",(0,r.jsx)(n.code,{children:"develop"})," branch."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update the Version Number"}),": Increment the version number in the project configuration files for the next release."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Repeat the Process"}),": Repeat the process for each release."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);