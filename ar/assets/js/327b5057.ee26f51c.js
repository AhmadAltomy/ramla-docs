"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5656],{3741:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var i=s(4848),r=s(8453);const l={},t="Code StyleGuide",c={id:"development/code-styleguide",title:"Code StyleGuide",description:"Code style guide for the typescript and React projects.",source:"@site/docs/development/04-code-styleguide.md",sourceDirName:"development",slug:"/development/code-styleguide",permalink:"/ramla-docs/ar/docs/development/code-styleguide",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"developmentSidebar",previous:{title:"Versioning and Release Strategy",permalink:"/ramla-docs/ar/docs/development/versioning"}},o={},d=[{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"Files",id:"files",level:3},{value:"Variables",id:"variables",level:3},{value:"Constants",id:"constants",level:3},{value:"Functions",id:"functions",level:3},{value:"Components",id:"components",level:3},{value:"Custom Hooks",id:"custom-hooks",level:3},{value:"Boolean Variables",id:"boolean-variables",level:3},{value:"React Props",id:"react-props",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Types",id:"types",level:3},{value:"Directories",id:"directories",level:3},{value:"Code Formatting",id:"code-formatting",level:2},{value:"Indentation",id:"indentation",level:3},{value:"Line Length",id:"line-length",level:3},{value:"Empty Lines",id:"empty-lines",level:3},{value:"Comments",id:"comments",level:3},{value:"Imports",id:"imports",level:3},{value:"Destructuring",id:"destructuring",level:3},{value:"Ternary Operator",id:"ternary-operator",level:3},{value:"Arrow Functions",id:"arrow-functions",level:3},{value:"Object Literals",id:"object-literals",level:3},{value:"Array Literals",id:"array-literals",level:3},{value:"Template Literals",id:"template-literals",level:3},{value:"Spread Operator",id:"spread-operator",level:3},{value:"Array Methods",id:"array-methods",level:3},{value:"Object Methods",id:"object-methods",level:3},{value:"React Hooks",id:"react-hooks",level:3},{value:"React Components",id:"react-components",level:3},{value:"React Props (TypeScript)",id:"react-props-typescript",level:3},{value:"React State",id:"react-state",level:3},{value:"React Context",id:"react-context",level:3},{value:"React Context (TypeScript)",id:"react-context-typescript",level:3},{value:"React Context with Reducer (TypeScript)",id:"react-context-with-reducer-typescript",level:3},{value:"Code Organization",id:"code-organization",level:2},{value:"Components Directory",id:"components-directory",level:3},{value:"Views Directory",id:"views-directory",level:3},{value:"Hooks Directory",id:"hooks-directory",level:3},{value:"Types Directory",id:"types-directory",level:3},{value:"Services Directory",id:"services-directory",level:3},{value:"Utils Directory",id:"utils-directory",level:3},{value:"Features Directory",id:"features-directory",level:3},{value:"Libs Directory",id:"libs-directory",level:3},{value:"Code Quality (Rules)",id:"code-quality-rules",level:2},{value:"Complexity",id:"complexity",level:2},{value:"No banned types (lint/complexity/noBannedTypes)",id:"no-banned-types-lintcomplexitynobannedtypes",level:3},{value:"No empty types parameters (lint/complexity/noEmptyTypeParameters)",id:"no-empty-types-parameters-lintcomplexitynoemptytypeparameters",level:3},{value:"No excessive cognitive complexity (lint/complexity/noExcessiveCognitiveComplexity)",id:"no-excessive-cognitive-complexity-lintcomplexitynoexcessivecognitivecomplexity",level:3},{value:"No for each (lint/complexity/noForEach)",id:"no-for-each-lintcomplexitynoforeach",level:3},{value:"No useless catch (lint/complexity/noUselessCatch)",id:"no-useless-catch-lintcomplexitynouselesscatch",level:3},{value:"No useless fragments (lint/complexity/noUselessFragment)",id:"no-useless-fragments-lintcomplexitynouselessfragment",level:3},{value:"No useless lone block statements (lint/complexity/noUselessLoneBlockStatements)",id:"no-useless-lone-block-statements-lintcomplexitynouselessloneblockstatements",level:3},{value:"No useless ternary (lint/complexity/noUselessTernary)",id:"no-useless-ternary-lintcomplexitynouselessternary",level:3},{value:"Use Arrow Functions (lint/complexity/useArrowFunctions)",id:"use-arrow-functions-lintcomplexityusearrowfunctions",level:3},{value:"Use optional chain (lint/complexity/useOptionalChain)",id:"use-optional-chain-lintcomplexityuseoptionalchain",level:3},{value:"Correctness",id:"correctness",level:2},{value:"No children prop (lint/correctness/noChildrenProp)",id:"no-children-prop-lintcorrectnessnochildrenprop",level:3},{value:"No const assign (lint/correctness/noConstAssign)",id:"no-const-assign-lintcorrectnessnoconstassign",level:3},{value:"No unsafe optional chaining (lint/correctness/noUnsafeOptionalChain)",id:"no-unsafe-optional-chaining-lintcorrectnessnounsafeoptionalchain",level:3},{value:"No unused variables (lint/correctness/noUnusedVariables)",id:"no-unused-variables-lintcorrectnessnounusedvariables",level:3},{value:"No exhaustive dependencies (lint/correctness/noExhaustiveDependencies)",id:"no-exhaustive-dependencies-lintcorrectnessnoexhaustivedependencies",level:3},{value:"Style",id:"style",level:2},{value:"No implicit boolean",id:"no-implicit-boolean",level:3},{value:"No parameter assign (lint/style/noParameterAssign)",id:"no-parameter-assign-lintstylenoparameterassign",level:3},{value:"No useless else (lint/style/noUselessElse)",id:"no-useless-else-lintstylenouselesselse",level:3},{value:"No var (lint/style/noVar)",id:"no-var-lintstylenovar",level:3},{value:"Use const (lint/style/useConst)",id:"use-const-lintstyleuseconst",level:3},{value:"Use import type (lint/style/useImportType)",id:"use-import-type-lintstyleuseimporttype",level:3},{value:"Use self closing elements (lint/style/useSelfClosingElements)",id:"use-self-closing-elements-lintstyleuseselfclosingelements",level:3},{value:"Use template (lint/style/useTemplate)",id:"use-template-lintstyleusetemplate",level:3},{value:"Suspicious",id:"suspicious",level:2},{value:"No array index key (lint/suspicious/noArrayIndexKey)",id:"no-array-index-key-lintsuspiciousnoarrayindexkey",level:3},{value:"No console log (lint/suspicious/noConsoleLog)",id:"no-console-log-lintsuspiciousnoconsolelog",level:3},{value:"No empty block statements (lint/suspicious/noEmptyBlockStatements)",id:"no-empty-block-statements-lintsuspiciousnoemptyblockstatements",level:3},{value:"No explicit any (lint/suspicious/noExplicitAny)",id:"no-explicit-any-lintsuspiciousnoexplicitany",level:3},{value:"Use await (lint/suspicious/useAwait)",id:"use-await-lintsuspicioususeawait",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"code-styleguide",children:"Code StyleGuide"}),"\n",(0,i.jsx)(n.p,{children:"Code style guide for the typescript and React projects."}),"\n",(0,i.jsx)(n.h2,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,i.jsx)(n.p,{children:"Naming conventions are important for the readability and maintainability of the code. The following naming conventions\nshould be followed in the project."}),"\n",(0,i.jsx)(n.h3,{id:"files",children:"Files"}),"\n",(0,i.jsxs)(n.p,{children:["all files should be named in ",(0,i.jsx)(n.code,{children:"camelCase"})," and should be descriptive for the content of the file."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File names"})," should be in ",(0,i.jsx)(n.code,{children:"camelCase"})," and should be descriptive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File extensions"})," should be in lowercase."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File names"})," should not contain any special characters or spaces."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File names"})," should not contain any numbers."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File names"})," if the file has default export, the file name should be the same as the default export."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// File name: my-file.ts\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// File name: myFile.ts\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Components example:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// File name: my-component.tsx\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// File name: myComponent.tsx\n"})}),"\n",(0,i.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Variable names"})," should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Variable names"})," should be descriptive."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let my_variable = 10;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let myVariable = 10;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"constants",children:"Constants"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Constant names"})," should be in ",(0,i.jsx)(n.code,{children:"UPPER_CASE"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React State"})," should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const myConstant = 10;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const MY_CONSTANT = 10;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"React State example:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const [my_state, setMyState] = useState(0);\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const [myState, setMyState] = useState(0);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function names"})," should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function names"})," should be descriptive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function names"})," should be verbs ex. ",(0,i.jsx)(n.code,{children:"get"}),", ",(0,i.jsx)(n.code,{children:"set"}),", ",(0,i.jsx)(n.code,{children:"fetch"}),", ",(0,i.jsx)(n.code,{children:"update"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function my_function() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function fetchData() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component names"})," should be in ",(0,i.jsx)(n.code,{children:"PascalCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component names"})," should be descriptive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component names"})," should be nouns ex. ",(0,i.jsx)(n.code,{children:"Header"}),", ",(0,i.jsx)(n.code,{children:"Footer"}),", ",(0,i.jsx)(n.code,{children:"Button"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function my_component() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function MyComponent() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"custom-hooks",children:"Custom Hooks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React Hooks names"})," should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React Hooks names"})," should be descriptive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React Hooks names"})," should be start with ",(0,i.jsx)(n.code,{children:"use"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function my_hook() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function useMyHook() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"boolean-variables",children:"Boolean Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Boolean variables"})," should be in ",(0,i.jsx)(n.code,{children:"is"})," or ",(0,i.jsx)(n.code,{children:"has"})," prefix."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let loading = false;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let isLoading = false;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-props",children:"React Props"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React Props"})," should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React Props"})," should be descriptive."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function MyComponent({ myProp }) {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function MyComponent({ myProp }) {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function parameters"})," should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function parameters"})," should be descriptive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function parameters"})," should be optional if possible."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction(param1, param2) {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction(param1, param2) {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type names"})," should be in ",(0,i.jsx)(n.code,{children:"PascalCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type names"})," should be descriptive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type names"})," should be nouns ex. ",(0,i.jsx)(n.code,{children:"User"}),", ",(0,i.jsx)(n.code,{children:"Post"}),", ",(0,i.jsx)(n.code,{children:"Comment"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type names"})," should be end with ",(0,i.jsx)(n.code,{children:"Type"})," ex. ",(0,i.jsx)(n.code,{children:"UserType"}),", ",(0,i.jsx)(n.code,{children:"PostType"}),", ",(0,i.jsx)(n.code,{children:"CommentType"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type names"})," components should be end with ",(0,i.jsx)(n.code,{children:"Props"})," ex. ",(0,i.jsx)(n.code,{children:"ButtonProps"}),", ",(0,i.jsx)(n.code,{children:"InputProps"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type user = {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type User = {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type UserType = {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type ButtonProps = {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"directories",children:"Directories"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Directory names"})," should be in ",(0,i.jsx)(n.code,{children:"kebab-case"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Directory names"})," should be descriptive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Directory names"})," should be nouns ex. ",(0,i.jsx)(n.code,{children:"components"}),", ",(0,i.jsx)(n.code,{children:"pages"}),", ",(0,i.jsx)(n.code,{children:"hooks"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Directory names"})," should be singular."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Directory names"})," should be lowercase."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Directory names"})," should not contain any special characters or spaces."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Directory name: MyComponents\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Directory name: components\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Directory name: my-components\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Directory name: components\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"code-formatting",children:"Code Formatting"}),"\n",(0,i.jsx)(n.p,{children:"Code formatting is important for the readability and maintainability of the code. The following code formatting should\nbe followed in the project."}),"\n",(0,i.jsx)(n.h3,{id:"indentation",children:"Indentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indentation"})," should be 2 spaces."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indentation"})," should be consistent."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indentation"})," should be used for each block of code."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction() {\n    // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"line-length",children:"Line Length"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Line length"})," should be 80 characters."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Line length"})," should be consistent."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const myLongVariableName = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.';\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const myLongVariableName = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"empty-lines",children:"Empty Lines"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Empty lines"})," should be used to separate blocks of code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Empty lines"})," should be used to separate logical parts of the code."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction() {\n  // code\n}\n\n\nfunction myFunction() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction() {\n  // code\n}\n\nfunction myFunction() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"comments",children:"Comments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Comments"})," should be used to explain the code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Comments"})," should be used to explain the logic."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Comments"})," should be used to explain the purpose of the code."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// data\nfunction fetchData() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"    // Fetch data from the API\n    function fetchData() {\n        // code\n    }\n"})}),"\n",(0,i.jsx)(n.h3,{id:"imports",children:"Imports"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Imports"})," should be sorted alphabetically."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Imports"})," should be grouped by type."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Imports"})," should be separated by an empty line."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Button } from './components/Button';\nimport { Input } from './components/Input';\nimport { User } from './types/User';\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React from 'react';\n\nimport { Button } from './components/Button';\nimport { Input } from './components/Input';\n\nimport { User } from './types/User';\n\nimport { useState, useEffect } from 'react';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"destructuring",children:"Destructuring"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Destructuring"})," should be used for objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Destructuring"})," should be used for arrays."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = {\n  name: 'John Doe',\n  age: 30,\n};\n\nconst name = user.name;\nconst age = user.age;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = {\n  name: 'John Doe',\n  age: 30,\n};\n\nconst { name, age } = user;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ternary-operator",children:"Ternary Operator"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ternary operator"})," should be used for simple conditions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ternary operator"})," should be used for simple assignments."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let message;\nif (isError) {\n  message = 'Error';\n} else {\n  message = 'Success';\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const message = isError ? 'Error' : 'Success';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"arrow-functions",children:"Arrow Functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Arrow functions"})," should be used for simple functions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Arrow functions"})," should be used for anonymous functions."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function myFunction() {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const myFunction = () => {\n  // code\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"object-literals",children:"Object Literals"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object literals"})," should be used for simple objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object literals"})," should be used for simple assignments."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = new Object();\nuser.name = 'John Doe';\nuser.age = 30;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = {\n  name: 'John Doe',\n  age: 30,\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"array-literals",children:"Array Literals"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Array literals"})," should be used for simple arrays."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Array literals"})," should be used for simple assignments."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const numbers = new Array();\nnumbers.push(1);\nnumbers.push(2);\nnumbers.push(3);\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const numbers = [1, 2, 3];\n"})}),"\n",(0,i.jsx)(n.h3,{id:"template-literals",children:"Template Literals"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Template literals"})," should be used for string interpolation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Template literals"})," should be used for string concatenation."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const message = 'Hello, ' + name + '!';\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const message = `Hello, ${name}!`;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"spread-operator",children:"Spread Operator"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spread operator"})," should be used for copying objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spread operator"})," should be used for merging objects."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = {\n  name: 'John Doe',\n  age: 30,\n};\n\nconst newUser = Object.assign({}, user);\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = {\n  name: 'John Doe',\n  age: 30,\n};\n\nconst newUser = { ...user };\n"})}),"\n",(0,i.jsx)(n.h3,{id:"array-methods",children:"Array Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Array methods"})," should be used for manipulating arrays."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Array methods"})," should be used for filtering arrays."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Array methods"})," should be used for mapping arrays."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Array methods"})," should be used for reducing arrays."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const numbers = [1, 2, 3];\n\nconst newNumbers = [];\nfor (let i = 0; i < numbers.length; i++) {\n  newNumbers.push(numbers[i] * 2);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const numbers = [1, 2, 3];\n\nconst newNumbers = numbers.map((number) => number * 2);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"object-methods",children:"Object Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object methods"})," should be used for manipulating objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object methods"})," should be used for filtering objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object methods"})," should be used for mapping objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object methods"})," should be used for reducing objects."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = {\n  name: 'John Doe',\n  age: 30,\n};\n\nconst newUser = {};\nfor (const key in user) {\n  newUser[key] = user[key];\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const user = {\n  name: 'John Doe',\n  age: 30,\n};\n\nconst newUser = { ...user };\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-hooks",children:"React Hooks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React hooks"})," should be used for managing state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React hooks"})," should be used for managing side effects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React hooks"})," should be used for managing context."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React, { useState, useEffect } from 'react';\n\nfunction MyComponent() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-components",children:"React Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React components"})," should be used for rendering UI."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React components"})," should be used for managing state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React components"})," should be used for managing props."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React from 'react';\n\nfunction MyComponent({ name }) {\n  return <h1>Hello, {name}!</h1>;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-props-typescript",children:"React Props (TypeScript)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React props"})," should be used for passing data to components."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React props"})," should be used for passing functions to components."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React props"})," should be used for passing objects to components."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React from 'react';\n\nfunction MyComponent({ name, age }) {\n  return (\n    <div>\n      <h1>Hello, {name}!</h1>\n      <p>You are {age} years old.</p>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-state",children:"React State"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React state"})," should be used for managing local state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React state"})," should be used for managing side effects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React state"})," should be used for managing context."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React, { useState } from 'react';\n\nfunction MyComponent() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-context",children:"React Context"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing global state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing theme."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing user authentication."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React, { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nfunction ThemeProvider({ children }) {\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  return useContext(ThemeContext);\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-context-typescript",children:"React Context (TypeScript)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing global state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing theme."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing user authentication."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be written in TypeScript."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React, { createContext, useContext, useState } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: React.Dispatch<React.SetStateAction<Theme>>;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nfunction ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('light');\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n\n  return context;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-context-with-reducer-typescript",children:"React Context with Reducer (TypeScript)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing global state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing theme."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used for managing user authentication."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be written in TypeScript."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React context"})," should be used with reducer."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import React, { createContext, useContext, useReducer } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ntype ThemeAction = { type: 'SET_THEME'; payload: Theme };\n\ntype ThemeState = {\n  theme: Theme;\n};\n\ntype ThemeContextType = {\n  state: ThemeState;\n  dispatch: React.Dispatch<ThemeAction>;\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nfunction themeReducer(state: ThemeState, action: ThemeAction): ThemeState {\n  switch (action.type) {\n    case 'SET_THEME':\n      return { ...state, theme: action.payload };\n    default:\n      return state;\n  }\n}\n\nfunction ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(themeReducer, { theme: 'light' });\n\n  return (\n    <ThemeContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n\n  return context;\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"code-organization",children:"Code Organization"}),"\n",(0,i.jsx)(n.p,{children:"Code organization is important for the readability and maintainability of the code. The following code organization\nshould be followed in the project."}),"\n",(0,i.jsx)(n.h3,{id:"components-directory",children:"Components Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any component that is used more than once should be a separate component."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Components"})," should be in the ",(0,i.jsx)(n.code,{children:"components"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Components"})," file name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Components"})," component name should be in ",(0,i.jsx)(n.code,{children:"PascalCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Components"})," should be in the ",(0,i.jsx)(n.code,{children:"tsx"})," extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Components"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"views-directory",children:"Views Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any screen that is used more than once should be a separate view."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Views"})," should be in the ",(0,i.jsx)(n.code,{children:"views"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Views"})," file name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Views"})," component name should be in ",(0,i.jsx)(n.code,{children:"PascalCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Views"})," should be in the ",(0,i.jsx)(n.code,{children:"tsx"})," extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Views"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"hooks-directory",children:"Hooks Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any custom hook that is used more than once should be a separate hook."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hooks"})," should be in the ",(0,i.jsx)(n.code,{children:"hooks"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hooks"})," file name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hooks"})," hook name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hooks"})," should be in the ",(0,i.jsx)(n.code,{children:"ts"})," extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hooks"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hooks"})," should be in the ",(0,i.jsx)(n.code,{children:"use"})," prefix."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"types-directory",children:"Types Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any type that is used more than once should be a separate type."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"})," should be in the ",(0,i.jsx)(n.code,{children:"types"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"})," file name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"})," type name should be in ",(0,i.jsx)(n.code,{children:"PascalCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"})," should be in the ",(0,i.jsx)(n.code,{children:"ts"})," extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"services-directory",children:"Services Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any service that is used more than once should be a separate service."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Services"})," should be in the ",(0,i.jsx)(n.code,{children:"services"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Services"})," file name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Services"})," service name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Services"})," should be in the ",(0,i.jsx)(n.code,{children:"ts"})," extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Services"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"utils-directory",children:"Utils Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any utility function that is used more than once should be a separate utility function."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utils"})," should be in the ",(0,i.jsx)(n.code,{children:"utils"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utils"})," file name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utils"})," utility function name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utils"})," should be in the ",(0,i.jsx)(n.code,{children:"ts"})," extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utils"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"features-directory",children:"Features Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any feature that is used more than once should be a separate feature."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," should be in the ",(0,i.jsx)(n.code,{children:"features"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," must contain a ",(0,i.jsx)(n.code,{children:"components"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," must contain a ",(0,i.jsx)(n.code,{children:"hooks"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," must contain a ",(0,i.jsx)(n.code,{children:"types"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," must contain a ",(0,i.jsx)(n.code,{children:"services"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," must contain a ",(0,i.jsx)(n.code,{children:"utils"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," must contain a ",(0,i.jsx)(n.code,{children:"views"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," should be in the ",(0,i.jsx)(n.code,{children:"camelCase"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"libs-directory",children:"Libs Directory"}),"\n",(0,i.jsx)(n.p,{children:"Any library that is used more than once should be a separate library."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Libs"})," should be in the ",(0,i.jsx)(n.code,{children:"libs"})," directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Libs"})," file name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Libs"})," library name should be in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Libs"})," should be in the ",(0,i.jsx)(n.code,{children:"ts"})," extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Libs"})," should be in the ",(0,i.jsx)(n.code,{children:"index.ts"})," file."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"code-quality-rules",children:"Code Quality (Rules)"}),"\n",(0,i.jsx)(n.p,{children:"Code quality is important for the readability and maintainability of the code. The following code quality should be\nfollowed in the project."}),"\n",(0,i.jsx)(n.h2,{id:"complexity",children:"Complexity"}),"\n",(0,i.jsx)(n.h3,{id:"no-banned-types-lintcomplexitynobannedtypes",children:"No banned types (lint/complexity/noBannedTypes)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow primitive type aliases and misleading types."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const n: {} = 0\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'let foo: string = "bar";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"no-empty-types-parameters-lintcomplexitynoemptytypeparameters",children:"No empty types parameters (lint/complexity/noEmptyTypeParameters)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow empty type parameters in type aliases and interfaces."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type Foo = Promise<>;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type Foo = Promise<void>;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-excessive-cognitive-complexity-lintcomplexitynoexcessivecognitivecomplexity",children:"No excessive cognitive complexity (lint/complexity/noExcessiveCognitiveComplexity)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow functions that exceed a given Cognitive Complexity score."}),"\n",(0,i.jsx)(n.h3,{id:"no-for-each-lintcomplexitynoforeach",children:"No for each (lint/complexity/noForEach)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow the use of forEach."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"els.forEach((el) => {\n  f(el);\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"for (const el of els) {\n  f(el);\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-useless-catch-lintcomplexitynouselesscatch",children:"No useless catch (lint/complexity/noUselessCatch)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow catch clauses that only rethrow the error."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"try {\n    doSomething();\n} catch(e) {\n    throw e;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"try {\n    doSomething();\n} catch(e) {\n    handleError(e);\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-useless-fragments-lintcomplexitynouselessfragment",children:"No useless fragments (lint/complexity/noUselessFragment)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow fragments that are useless."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<>\n    <Foo />\n</>\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<>\n    <Foo />\n    <Bar />\n</>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-useless-lone-block-statements-lintcomplexitynouselessloneblockstatements",children:"No useless lone block statements (lint/complexity/noUselessLoneBlockStatements)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow lone block statements that do nothing."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{\n    foo();\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-useless-ternary-lintcomplexitynouselessternary",children:"No useless ternary (lint/complexity/noUselessTernary)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow ternary operators when simpler alternatives exist."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = a ? a : b;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = a || b;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-arrow-functions-lintcomplexityusearrowfunctions",children:"Use Arrow Functions (lint/complexity/useArrowFunctions)"}),"\n",(0,i.jsx)(n.p,{children:"Use arrow functions over function expressions."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function foo() {\n    return 1;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = () => 1;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-optional-chain-lintcomplexityuseoptionalchain",children:"Use optional chain (lint/complexity/useOptionalChain)"}),"\n",(0,i.jsx)(n.p,{children:"Use optional chaining when accessing properties."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = bar && bar.baz;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = bar?.baz;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"correctness",children:"Correctness"}),"\n",(0,i.jsx)(n.h3,{id:"no-children-prop-lintcorrectnessnochildrenprop",children:"No children prop (lint/correctness/noChildrenProp)"}),"\n",(0,i.jsx)(n.p,{children:"Prevent passing children as props."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<MyComponent children={<div />} />\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<MyComponent>\n    <div />\n</MyComponent>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-const-assign-lintcorrectnessnoconstassign",children:"No const assign (lint/correctness/noConstAssign)"}),"\n",(0,i.jsxs)(n.p,{children:["Prevents from having ",(0,i.jsx)(n.code,{children:"const"})," variables being re-assigned."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = 1;\nfoo = 2;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let foo = 1;\nfoo = 2;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-unsafe-optional-chaining-lintcorrectnessnounsafeoptionalchain",children:"No unsafe optional chaining (lint/correctness/noUnsafeOptionalChain)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow the use of optional chaining in contexts where the undefined value is not allowed."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = bar?.baz;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = bar.baz;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-unused-variables-lintcorrectnessnounusedvariables",children:"No unused variables (lint/correctness/noUnusedVariables)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow unused variables."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = 1;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = 1;\nconsole.log(foo);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-exhaustive-dependencies-lintcorrectnessnoexhaustivedependencies",children:"No exhaustive dependencies (lint/correctness/noExhaustiveDependencies)"}),"\n",(0,i.jsx)(n.p,{children:"Enforce all dependencies are correctly specified in a React hook."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { useEffect } from "react";\n\nfunction component() {\n    let a = 1;\n    useEffect(() => {\n        console.log(a);\n    }, []);\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { useEffect } from "react";\n\nfunction component() {\n    let a = 1;\n    useEffect(() => {\n        console.log(a);\n    }, [a]);\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"style",children:"Style"}),"\n",(0,i.jsx)(n.h3,{id:"no-implicit-boolean",children:"No implicit boolean"}),"\n",(0,i.jsx)(n.p,{children:"Disallow implicit true values on JSX boolean attributes"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<MyComponent disabled/>\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<MyComponent disabled={true}  />\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-parameter-assign-lintstylenoparameterassign",children:"No parameter assign (lint/style/noParameterAssign)"}),"\n",(0,i.jsx)(n.p,{children:"Prevent parameter reassignment."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function foo(bar) {\n    bar = 1;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function foo(bar) {\n    const baz = 1;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-useless-else-lintstylenouselesselse",children:"No useless else (lint/style/noUselessElse)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow else block when the if block breaks early."}),"\n",(0,i.jsx)(n.p,{children:"If an if block breaks early using a breaking statement (return, break, continue, or throw), then the else block becomes\nuseless. Its contents can be placed outside of the block."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"if (foo) {\n    return bar;\n} else {\n    return baz;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"if (foo) {\n    return bar;\n}\nreturn baz;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-var-lintstylenovar",children:"No var (lint/style/noVar)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow the use of var."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"var foo = 1;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let foo = 1;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-const-lintstyleuseconst",children:"Use const (lint/style/useConst)"}),"\n",(0,i.jsx)(n.p,{children:"Require const declarations for variables that are only assigned once."}),"\n",(0,i.jsx)(n.p,{children:"Variables that are initialized and never reassigned and variables that are only assigned once can be declared as const."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let foo = 1;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = 1;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-import-type-lintstyleuseimporttype",children:"Use import type (lint/style/useImportType)"}),"\n",(0,i.jsx)(n.p,{children:"TypeScript allows specifying a type qualifier on an import to indicate that the import doesn\u2019t exist at runtime. This\nallows transpilers to safely drop imports of types without looking for their definition. This also ensures that some\nmodules are not loaded at runtime."}),"\n",(0,i.jsx)(n.p,{children:"The rule ensures that all imports used only as a type use a type-only import. It also groups inline type imports into a\ngrouped import type."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { A } from "./mod.js";\ntype TypeOfA = typeof A;\nlet a: A;\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import type { A } from "./mod.js";\ntype TypeOfA = typeof A;\nlet a: A;\n'})}),"\n",(0,i.jsx)(n.h3,{id:"use-self-closing-elements-lintstyleuseselfclosingelements",children:"Use self closing elements (lint/style/useSelfClosingElements)"}),"\n",(0,i.jsx)(n.p,{children:"Prevent extra closing tags for self-closing elements."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<MyComponent></MyComponent>\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"<MyComponent />\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-template-lintstyleusetemplate",children:"Use template (lint/style/useTemplate)"}),"\n",(0,i.jsx)(n.p,{children:"Prefer template literals over string concatenation."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const foo = "Hello, " + name + "!";\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const foo = `Hello, ${name}!`;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"suspicious",children:"Suspicious"}),"\n",(0,i.jsx)(n.p,{children:"Rules that detect code that is likely to be incorrect or useless."}),"\n",(0,i.jsx)(n.h3,{id:"no-array-index-key-lintsuspiciousnoarrayindexkey",children:"No array index key (lint/suspicious/noArrayIndexKey)"}),"\n",(0,i.jsx)(n.p,{children:"Prevent using array index as key in React components."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{items.map((item, index) => (\n    <Item key={index} />\n))}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{items.map((item) => (\n    <Item key={item.id} />\n))}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-console-log-lintsuspiciousnoconsolelog",children:"No console log (lint/suspicious/noConsoleLog)"}),"\n",(0,i.jsx)(n.p,{children:"Prevent the use of console.log."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'console.log("Hello, World!");\n'})}),"\n",(0,i.jsx)(n.h3,{id:"no-empty-block-statements-lintsuspiciousnoemptyblockstatements",children:"No empty block statements (lint/suspicious/noEmptyBlockStatements)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow empty block statements."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{\n    foo();\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"no-explicit-any-lintsuspiciousnoexplicitany",children:"No explicit any (lint/suspicious/noExplicitAny)"}),"\n",(0,i.jsx)(n.p,{children:"Disallow explicit any types."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let foo: any = 1;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"let foo: number = 1;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-await-lintsuspicioususeawait",children:"Use await (lint/suspicious/useAwait)"}),"\n",(0,i.jsx)(n.p,{children:"Prefer using await over then."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bad:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'fetch("https://api.example.com")\n    .then((response) => response.json())\n    .then((data) => console.log(data));\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Good:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const response = await fetch("https://api.example.com");\nconst data = await response.json();\nconsole.log(data);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);